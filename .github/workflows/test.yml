# This is a basic workflow to help you get started with Actions

name: Test

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "*" # matches every branch that doesn't contain a '/'
      - "*/*" # matches every branch containing a single '/'
      - "**" # matches every branch
      # - "!main" # excludes master
      - "!release/production" # excludes master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: macos-latest
    timeout-minutes: 10
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: oven-sh/setup-bun@v1

      - run: bun install

      - name: Test
        run: bun run test-recursive
        env:
          PRIVATE_KEY: ${{ secrets.TEST_PRIVATE_KEY }}
          PUBLIC_KEY: ${{ secrets.TEST_PUBLIC_KEY }}

  test-supabase:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # disable for now - since it for some reason fails on CI
    if: false 
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: oven-sh/setup-bun@v1

      - run: bun install

      - uses: supabase/setup-cli@v1
      
      - run: supabase start
        working-directory: ./packages/supabase/supabase-app

      - name: Test
        run: bun run codegen && bun test
        working-directory: ./packages/supabase

  typecheck:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        id: checkout

      - uses: oven-sh/setup-bun@v1

      - run: bun install

      - name: Typecheck
        run: bun run typecheck

  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        id: checkout

      - uses: oven-sh/setup-bun@v1

      - run: bun install

      - name: Lint
        run: bun run lint

  codegen:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: oven-sh/setup-bun@v1

      - run: bun install

      - run: bun run graphql-codegen
