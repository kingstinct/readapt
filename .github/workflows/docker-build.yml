# This is a basic workflow to help you get started with Actions

name: Docker Build

on:
  workflow_call:
    secrets:
      github-token:
        required: true
    inputs:
      envFile:
        required: false
        type: string
        default: .env.github
      discordWebhook:
        required: false
        type: string
      baseImageSuffix:
        default: -slim
        type: string
      dockerBuildArgs:
        required: false
        type: string
      dockerImageTags:
        required: false
        type: string
        default: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - uses: actions/checkout@v4
      - uses: cardinalby/export-env-action@2.2.0
        with:
          envFile: ${{ inputs.envFile }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.github-token }}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v5
        env:
          baseImage: BASE_IMAGE=oven/bun:${{ env.BUN_VERSION || 'latest' }}${{ inputs.baseImageSuffix }}
        with:
          push: true
          context: .
          build-args: ${{ inputs.dockerBuildArgs || env.baseImage }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ inputs.dockerImageTags }}

      - uses: sarisia/actions-status-discord@v1
        if: ${{ failure() && inputs.discordWebhook }}
        with:
          webhook: ${{ inputs.discordWebhook }}

      - uses: rtCamp/action-slack-notify@v2
        if: ${{ failure() && env.SLACK_WEBHOOK }}