scalar JSON
scalar DateTime

type BullJob {
  name: String!
  data: JSON!
  id: ID
  progress: Float
  state: JobState!
  timestamp: Int!
  delay: Int
}

enum JobState {
  completed
  failed
  active
  delayed
  prioritized
  waiting
  waiting_children
}

type BullQueue {
  name: String!
  count: Int!
  completedCount: Int!
  activeCount: Int!
  waitingCount: Int!
  waitingChildrenCount: Int!
  failedCount: Int!
  delayedCount: Int!
  isPaused: Boolean!
  jobs(
    type: [JobType!]
    start: Int
    end: Int
    asc: Boolean
  ): [BullJob!]!
}

enum JobType {
  completed
  failed
  active
  delayed
  prioritized
  waiting
  waiting_children
  paused
  repeat
  wait
}

type Query {
  queues: [BullQueue!]!
}

type Mutation {
  addJob(queue: String!): BullJob!
}

type Subscription {
  jobUpdated: BullJob!
}
