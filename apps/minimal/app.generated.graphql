schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

directive @auth(match: JSONObject, skip: Boolean, includes: JSONObject, or: [AuthOr!]) on FIELD_DEFINITION

type Query {
  hello: String!
  validateJWT(token: String!): Boolean! @auth(skip: true)
  readJWT(token: String!): JSONObject! @auth(skip: true)
  publicKey: String! @auth(skip: true)
}

type Mutation {
  randomNumber: Int!
}

type Subscription {
  countdown(from: Int!): Int!
  tick: Float!
  randomNumber: Int!
}

scalar JSONObject

input AuthOr {
  includes: JSONObject
  match: JSONObject
}
